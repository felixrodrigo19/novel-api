// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Prints the home message",
                "produces": [
                    "application/json"
                ],
                "summary": "Home",
                "operationId": "home",
                "responses": {
                    "200": {
                        "description": "Home",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author": {
            "get": {
                "description": "Lists all authors registered in the database",
                "produces": [
                    "application/json"
                ],
                "summary": "List all authors",
                "operationId": "all-authors",
                "responses": {
                    "200": {
                        "description": "List of authors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Author"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new author in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new author",
                "operationId": "create-author",
                "parameters": [
                    {
                        "description": "Author data",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Author"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created author",
                        "schema": {
                            "$ref": "#/definitions/models.Author"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/{id}": {
            "get": {
                "description": "Gets a specific author by their ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get an author",
                "operationId": "get-author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the author",
                        "schema": {
                            "$ref": "#/definitions/models.Author"
                        }
                    },
                    "400": {
                        "description": "Invalid author ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Author not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre": {
            "get": {
                "description": "Lists all genres registered in the database",
                "produces": [
                    "application/json"
                ],
                "summary": "List all genres",
                "operationId": "all-genres",
                "responses": {
                    "200": {
                        "description": "List of genres",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genre"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new genre in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new genre",
                "operationId": "create-genre",
                "parameters": [
                    {
                        "description": "Genre data",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created genre",
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/{id}": {
            "get": {
                "description": "Gets a specific genre by its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a genre",
                "operationId": "get-genre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the genre",
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    },
                    "400": {
                        "description": "Invalid genre ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Genre not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/novel": {
            "get": {
                "description": "Lists all novels registered in the database",
                "produces": [
                    "application/json"
                ],
                "summary": "List all novels",
                "operationId": "all-novels",
                "responses": {
                    "200": {
                        "description": "List of novels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Novel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new novel in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new novel",
                "operationId": "create-novel",
                "parameters": [
                    {
                        "description": "Novel data",
                        "name": "novel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Novel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created novel",
                        "schema": {
                            "$ref": "#/definitions/models.Novel"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/novel/{id}": {
            "get": {
                "description": "Gets a specific novel by its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a novel",
                "operationId": "get-novel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Novel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the novel",
                        "schema": {
                            "$ref": "#/definitions/models.Novel"
                        }
                    },
                    "400": {
                        "description": "Invalid novel ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Novel not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Author": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "description": "ID of the author",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the author",
                    "type": "string"
                },
                "novels": {
                    "description": "Novels associated with the author",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Novel"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Genre": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "description": "ID of the genre",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the genre",
                    "type": "string"
                },
                "novels": {
                    "description": "Novels associated with the genre",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Novel"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Novel": {
            "type": "object",
            "properties": {
                "authors": {
                    "description": "Authors associated with the novel",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Author"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "description": "Description of the novel",
                    "type": "string"
                },
                "genres": {
                    "description": "Genres associated with the novel",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Genre"
                    }
                },
                "id": {
                    "description": "ID of the novel",
                    "type": "integer"
                },
                "language": {
                    "description": "Language of the novel",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the novel",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the novel",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "year": {
                    "description": "Year of publication",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "http://localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Novel API Documentation",
	Description:      "The Novel Backend API is designed to facilitate the management and distribution of novel data.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
